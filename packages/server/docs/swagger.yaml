basePath: /
definitions:
  ctype.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      PermissionAdmin: 管理员
      PermissionDsiableUser: 被禁言用户
      PermissionUser: 用户
      PermissionVisitor: 游客
    x-enum-varnames:
    - PermissionAdmin
    - PermissionUser
    - PermissionVisitor
    - PermissionDsiableUser
  images_api.ImageUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  menu_api.ImageSort:
    properties:
      image_id:
        type: integer
      sort:
        type: integer
    type: object
  menu_api.MenuRequest:
    properties:
      abstract:
        items:
          type: string
        type: array
      abstract_time:
        description: 切换的时间，单位秒
        type: integer
      banner_time:
        description: 切换的时间，单位秒
        type: integer
      image_sort_list:
        description: 具体图片的顺序
        items:
          $ref: '#/definitions/menu_api.ImageSort'
        type: array
      path:
        type: string
      slogan:
        type: string
      sort:
        description: 菜单的序号
        type: integer
      title:
        type: string
    required:
    - path
    - sort
    - title
    type: object
  models.RemoveRequest:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
  res.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  user_api.BindEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  user_api.EmailLoginRequest:
    properties:
      password:
        type: string
      user_name:
        description: 用户或者邮箱
        type: string
    required:
    - password
    - user_name
    type: object
  user_api.UpdatePasswordRequest:
    properties:
      old_pwd:
        description: 旧密码
        type: string
      pwd:
        description: 新密码
        type: string
    required:
    - old_pwd
    type: object
  user_api.UserCreateRequest:
    properties:
      nick_name:
        type: string
      password:
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 1 管理员   2 普通用户   3 游客
      user_name:
        type: string
    required:
    - nick_name
    - password
    - user_name
    type: object
  user_api.UserRole:
    properties:
      nick_name:
        description: 防止用户昵称非法，管理员有能力修改
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        enum:
        - 1
        - 2
        - 3
        - 4
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: web API文档
  title: web API文档
  version: "1.0"
paths:
  /api/email_login:
    post:
      consumes:
      - application/json
      description: 传入登录信息登录账号
      parameters:
      - description: 注册请求体
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户登录
      tags:
      - 用户管理
  /api/image_names:
    get:
      consumes:
      - application/json
      description: 无需输入参数，直接返回查询图片库所有图片的id，path，name
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 全部图片展示
      tags:
      - 图片管理
  /api/images:
    delete:
      consumes:
      - application/json
      description: 传入待删除的图片ID集合id_list，根据ID执行删除操作
      parameters:
      - description: 图片ID列表
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 图片删除
      tags:
      - 图片管理
    get:
      consumes:
      - application/json
      description: 传入待查询的图片页数几每页限制几张图片，返回查询结果
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页的图片输
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 图片分页查询
      tags:
      - 图片管理
    post:
      consumes:
      - application/json
      description: 往images上传图片文件，返回上传的图片响应
      parameters:
      - description: 图片文件
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 图片上传
      tags:
      - 图片管理
    put:
      consumes:
      - application/json
      description: 传入待编辑的图片id及修改后的名称name，返回修改成功
      parameters:
      - description: 修改后的图片名称
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/images_api.ImageUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 图片编辑
      tags:
      - 图片管理
  /api/logout:
    post:
      consumes:
      - application/json
      description: 用户注销请求
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户注销
      tags:
      - 用户管理
  /api/menu_names:
    get:
      consumes:
      - application/json
      description: 查询所有菜单栏并只返回菜单编号id，标题title，跳转链接path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 查询菜单
      tags:
      - 菜单管理
  /api/menus:
    delete:
      consumes:
      - application/json
      description: 传入待删除菜单的id_list后按照里面的id删除菜单
      parameters:
      - description: 需要删除的菜单id
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除菜单
      tags:
      - 菜单管理
    get:
      consumes:
      - application/json
      description: 查询所有菜单栏信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 查询菜单
      tags:
      - 菜单管理
    post:
      consumes:
      - application/json
      description: 传入参数创建菜单
      parameters:
      - description: 添加的菜单信息
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单创建
      tags:
      - 菜单管理
  /api/menus/{id}:
    get:
      consumes:
      - application/json
      description: 查询编号id的菜单图片信息
      parameters:
      - description: 菜单id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单详情
      tags:
      - 菜单管理
    put:
      consumes:
      - application/json
      description: 传入参数更新菜单
      parameters:
      - description: 更新后的菜单信息
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新菜单
      tags:
      - 菜单管理
  /api/register:
    post:
      consumes:
      - application/json
      description: 传入注册信息注册新用户
      parameters:
      - description: 注册信息
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户注册
      tags:
      - 用户管理
  /api/settings/{name}:
    get:
      consumes:
      - application/json
      description: 根据name字段查看相关系统配置信息
      parameters:
      - description: 系统配置的字段名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 查看系统信息
      tags:
      - 系统管理
    put:
      consumes:
      - application/json
      description: 根据name字段更新相关系统配置信息
      parameters:
      - description: 系统配置的字段名称
        in: path
        name: name
        required: true
        type: string
      - description: 更新的信息
        in: body
        name: updateRequest
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新系统信息
      tags:
      - 系统管理
  /api/user_bing_email:
    post:
      consumes:
      - application/json
      description: 通过邮箱验证码绑定账号
      parameters:
      - description: 邮箱绑定请求体
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.BindEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户绑定邮箱
      tags:
      - 用户管理
  /api/user_password:
    put:
      consumes:
      - application/json
      description: 传入验证信息修改密码
      parameters:
      - description: 密码更新请求体
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改用户密码
      tags:
      - 用户管理
  /api/user_role:
    put:
      consumes:
      - application/json
      description: 传入选中待修改权限的用户进行权限修改
      parameters:
      - description: 更新请求体
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户权限更新
      tags:
      - 用户管理
  /api/users:
    delete:
      consumes:
      - application/json
      description: 传入待删除用户id_list后根据id删除每一个用户
      parameters:
      - description: 删除请求体
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户删除
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 传入页面参数获取用户信息
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户列表
      tags:
      - 用户管理
swagger: "2.0"
